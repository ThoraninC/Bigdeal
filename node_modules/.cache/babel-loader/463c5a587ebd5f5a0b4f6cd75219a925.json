{"ast":null,"code":"import _slicedToArray from \"D:\\\\Webapp_Lab\\\\htdocs\\\\Bigdeal\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\Webapp_Lab\\\\htdocs\\\\Bigdeal\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n  }\n\n  renderSquare(i) {\n    return React.createElement(Square, {\n      value: this.props.squares[i],\n      onClick: () => this.props.onClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    let table = [];\n\n    for (let i = 0; i < 3; i++) {\n      let cells = [];\n\n      for (let j = 0; j < 3; j++) {\n        cells.push(this.renderSquare(j * 3 + i));\n      }\n\n      table.push(React.createElement(\"div\", {\n        className: \"board-row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, cells));\n    }\n\n    return (// <div>\n      //     <div className=\"board-row\">\n      //         {this.renderSquare(0)}\n      //         {this.renderSquare(1)}\n      //         {this.renderSquare(2)}\n      //     </div>\n      //     <div className=\"board-row\">\n      //         {this.renderSquare(3)}\n      //         {this.renderSquare(4)}\n      //         {this.renderSquare(5)}\n      //     </div>\n      //     <div className=\"board-row\">\n      //         {this.renderSquare(6)}\n      //         {this.renderSquare(7)}\n      //         {this.renderSquare(8)}\n      //     </div>\n      // </div>\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, table)\n    );\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      this_move: i,\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move + \"(\" + (history.this_move / 3 + 1) + \",\" + (history.this_move % 3 + 1) + \")\" : 'Go to game start';\n      return React.createElement(\"li\", {\n        key: move,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.jumpTo(move),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, desc));\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return React.createElement(\"div\", {\n      className: \"game\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Board, {\n      squares: current.squares,\n      onClick: i => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, status), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, moves)));\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const _lines$i = _slicedToArray(lines[i], 3),\n          a = _lines$i[0],\n          b = _lines$i[1],\n          c = _lines$i[2];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 173\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["D:\\Webapp_Lab\\htdocs\\Bigdeal\\src\\index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","constructor","state","squares","Array","fill","xIsNext","renderSquare","i","render","table","cells","j","push","Game","history","stepNumber","handleClick","slice","current","length","calculateWinner","setState","concat","this_move","jumpTo","step","winner","moves","map","move","desc","status","lines","a","b","c","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAsB;AAClB,SACI;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAEA,KAAK,CAACC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACE,KADX,CADJ;AAKH;;AAED,MAAMC,KAAN,SAAoBN,KAAK,CAACO,SAA1B,CAAoC;AAChCC,EAAAA,WAAW,CAACL,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKM,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd,CADA;AAETC,MAAAA,OAAO,EAAC;AAFC,KAAb;AAIH;;AAEDC,EAAAA,YAAY,CAACC,CAAD,EAAI;AACd,WACE,oBAAC,MAAD;AACI,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWO,OAAX,CAAmBK,CAAnB,CADX;AAEI,MAAA,OAAO,EAAE,MAAM,KAAKZ,KAAL,CAAWC,OAAX,CAAmBW,CAAnB,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;;AAGDC,EAAAA,MAAM,GAAG;AAEL,QAAIC,KAAK,GAAG,EAAZ;;AAEA,SAAI,IAAIF,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AAChB,UAAIG,KAAK,GAAG,EAAZ;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,CAAd,EAAgBA,CAAC,EAAjB,EAAoB;AAChBD,QAAAA,KAAK,CAACE,IAAN,CAAW,KAAKN,YAAL,CAAkBK,CAAC,GAAC,CAAF,GAAIJ,CAAtB,CAAX;AACH;;AACDE,MAAAA,KAAK,CAACG,IAAN,CAAW;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4BF,KAA5B,CAAX;AACH;;AAED,WACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,KADL;AAnBJ;AAuBH;;AAtD+B;;AAyDpC,MAAMI,IAAN,SAAmBrB,KAAK,CAACO,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,CAACL,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKM,KAAL,GAAa;AACTa,MAAAA,OAAO,EAAE,CAAC;AACNZ,QAAAA,OAAO,EAAEC,KAAK,CAAC,CAAD,CAAL,CAASC,IAAT,CAAc,IAAd;AADH,OAAD,CADA;AAITW,MAAAA,UAAU,EAAE,CAJH;AAKTV,MAAAA,OAAO,EAAE;AALA,KAAb;AAOH;;AAEDW,EAAAA,WAAW,CAACT,CAAD,EAAG;AACV,UAAMO,OAAO,GAAG,KAAKb,KAAL,CAAWa,OAAX,CAAmBG,KAAnB,CAAyB,CAAzB,EAA4B,KAAKhB,KAAL,CAAWc,UAAX,GAAwB,CAApD,CAAhB;AACA,UAAMG,OAAO,GAAGJ,OAAO,CAACA,OAAO,CAACK,MAAR,GAAiB,CAAlB,CAAvB;AACA,UAAMjB,OAAO,GAAGgB,OAAO,CAAChB,OAAR,CAAgBe,KAAhB,EAAhB;;AACA,QAAIG,eAAe,CAAClB,OAAD,CAAf,IAA4BA,OAAO,CAACK,CAAD,CAAvC,EAA4C;AACxC;AACH;;AAEDL,IAAAA,OAAO,CAACK,CAAD,CAAP,GAAa,KAAKN,KAAL,CAAWI,OAAX,GAAqB,GAArB,GAA2B,GAAxC;AACA,SAAKgB,QAAL,CAAc;AACVP,MAAAA,OAAO,EAAEA,OAAO,CAACQ,MAAR,CAAe,CAAC;AACvBpB,QAAAA,OAAO,EAAEA;AADc,OAAD,CAAf,CADC;AAIVqB,MAAAA,SAAS,EAAEhB,CAJD;AAKVQ,MAAAA,UAAU,EAAED,OAAO,CAACK,MALV;AAMVd,MAAAA,OAAO,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AANX,KAAd;AAQH;;AAEDmB,EAAAA,MAAM,CAACC,IAAD,EAAM;AACR,SAAKJ,QAAL,CAAc;AACVN,MAAAA,UAAU,EAAEU,IADF;AAEVpB,MAAAA,OAAO,EAAGoB,IAAI,GAAG,CAAR,KAAe;AAFd,KAAd;AAMH;;AAEDjB,EAAAA,MAAM,GAAG;AACL,UAAMM,OAAO,GAAG,KAAKb,KAAL,CAAWa,OAA3B;AACA,UAAMI,OAAO,GAAGJ,OAAO,CAAC,KAAKb,KAAL,CAAWc,UAAZ,CAAvB;AACA,UAAMW,MAAM,GAAGN,eAAe,CAACF,OAAO,CAAChB,OAAT,CAA9B;AAEA,UAAMyB,KAAK,GAAGb,OAAO,CAACc,GAAR,CAAY,CAACH,IAAD,EAAOI,IAAP,KAAgB;AACtC,YAAMC,IAAI,GAAGD,IAAI,GAAG,iBAAiBA,IAAjB,GAAwB,GAAxB,IAA+Bf,OAAO,CAACS,SAAR,GAAkB,CAAlB,GAAsB,CAArD,IAA0D,GAA1D,IAAiET,OAAO,CAACS,SAAR,GAAkB,CAAlB,GAAsB,CAAvF,IAA4F,GAA/F,GAAqG,kBAAtH;AACA,aACI;AAAI,QAAA,GAAG,EAAEM,IAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKL,MAAL,CAAYK,IAAZ,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2CC,IAA3C,CADJ,CADJ;AAOH,KATa,CAAd;AAWA,QAAIC,MAAJ;;AACA,QAAIL,MAAJ,EAAY;AACVK,MAAAA,MAAM,GAAG,aAAaL,MAAtB;AACD,KAFD,MAEO;AACLK,MAAAA,MAAM,GAAG,mBAAmB,KAAK9B,KAAL,CAAWI,OAAX,GAAqB,GAArB,GAA2B,GAA9C,CAAT;AACD;;AAEH,WACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACI,MAAA,OAAO,EAAEa,OAAO,CAAChB,OADrB;AAEI,MAAA,OAAO,EAAEK,CAAC,IAAI,KAAKS,WAAL,CAAiBT,CAAjB,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAOE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMwB,MAAN,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,KAAL,CAFF,CAPF,CADF;AAcD;;AA7E8B;;AAgFnC,SAASP,eAAT,CAAyBlB,OAAzB,EAAkC;AAC9B,QAAM8B,KAAK,GAAG,CACZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADY,EAEZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFY,EAGZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHY,EAIZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJY,EAKZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALY,EAMZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANY,EAOZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPY,EAQZ,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARY,CAAd;;AAUA,OAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyB,KAAK,CAACb,MAA1B,EAAkCZ,CAAC,EAAnC,EAAuC;AAAA,oCACnByB,KAAK,CAACzB,CAAD,CADc;AAAA,UAC9B0B,CAD8B;AAAA,UAC3BC,CAD2B;AAAA,UACxBC,CADwB;;AAErC,QAAIjC,OAAO,CAAC+B,CAAD,CAAP,IAAc/B,OAAO,CAAC+B,CAAD,CAAP,KAAe/B,OAAO,CAACgC,CAAD,CAApC,IAA2ChC,OAAO,CAAC+B,CAAD,CAAP,KAAe/B,OAAO,CAACiC,CAAD,CAArE,EAA0E;AACxE,aAAOjC,OAAO,CAAC+B,CAAD,CAAd;AACD;AACF;;AACD,SAAO,IAAP;AACD,C,CAEH;;;AAEAxC,QAAQ,CAACe,MAAT,CACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,EAEI4B,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFJ","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props){\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n  \r\nclass Board extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            xIsNext:true,\r\n        };\r\n    }\r\n\r\n    renderSquare(i) {\r\n      return (\r\n        <Square \r\n            value={this.props.squares[i]}\r\n            onClick={() => this.props.onClick(i)}\r\n        />\r\n      );\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let table = []\r\n\r\n        for(let i=0;i<3;i++){\r\n            let cells = []\r\n            for(let j=0;j<3;j++){\r\n                cells.push(this.renderSquare(j*3+i));\r\n            }\r\n            table.push(<div className=\"board-row\">{cells}</div>);\r\n        }\r\n\r\n        return (\r\n            // <div>\r\n            //     <div className=\"board-row\">\r\n            //         {this.renderSquare(0)}\r\n            //         {this.renderSquare(1)}\r\n            //         {this.renderSquare(2)}\r\n            //     </div>\r\n            //     <div className=\"board-row\">\r\n            //         {this.renderSquare(3)}\r\n            //         {this.renderSquare(4)}\r\n            //         {this.renderSquare(5)}\r\n            //     </div>\r\n            //     <div className=\"board-row\">\r\n            //         {this.renderSquare(6)}\r\n            //         {this.renderSquare(7)}\r\n            //         {this.renderSquare(8)}\r\n            //     </div>\r\n            // </div>\r\n\r\n            <div>\r\n                {table}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n  \r\nclass Game extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n        };\r\n    }\r\n\r\n    handleClick(i){\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n              squares: squares,\r\n            }]),\r\n            this_move: i,\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        });\r\n    }\r\n\r\n    jumpTo(step){\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        });\r\n\r\n        \r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ? 'Go to move #' + move + \"(\" + (history.this_move/3 + 1) + \",\" + (history.this_move%3 + 1) + \")\" : 'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        \r\n\r\n        });\r\n    \r\n        let status;\r\n        if (winner) {\r\n          status = 'Winner: ' + winner;\r\n        } else {\r\n          status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board\r\n                squares={current.squares}\r\n                onClick={i => this.handleClick(i)}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  \r\n// ========================================\r\n  \r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n  "]},"metadata":{},"sourceType":"module"}